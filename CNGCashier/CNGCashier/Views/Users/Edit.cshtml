@model CNGCashier.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<style type="text/css">
    .field-icon {
        float: right;
        margin-left: -25px;
        margin-top: -25px;
        position: relative;
        z-index: 2;
    }

    .container {
        padding-top: 50px;
        margin: auto;
    }
</style>
<script type="text/javascript">
    $(".toggle-password").click(function() {

  $(this).toggleClass("fa-eye fa-eye-slash");
  var input = $($(this).attr("toggle"));
  if (input.attr("type") == "password") {
    input.attr("type", "text");
  } else {
    input.attr("type", "password");
  }
});
</script>*@

@using (Html.BeginForm("Edit", "Users", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="panel-heading">
        <h4 class="panel-title">User Management</h4>
    </div>
    <div class="panel-body">
        <div class="form-horizontal">
            @*<div class="form-group">
                <label class="control-label col-md-2">
                    <small class="text-danger"><span class="symbol required"></span> Required Fields</small>
                </label>
            </div>*@

            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*<label class="control-label col-md-2">
                    Password
                    <span class="symbol required"></span>
                </label>*@
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "password-field", @type = "password", @name = "password" } })
                    @*<span toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password"></span>*@
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserTypeId, "UserTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("UserTypeId", (IEnumerable<SelectListItem>)ViewBag.UserType, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                            User Level
                </label>
                @*@Html.LabelFor(model => model.UserTypeId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-6">
                    @*@Html.EditorFor(model => model.UserLevel, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownList("UserLevel", new List<SelectListItem>
                            {
                                new SelectListItem{ Text="Preparing", Value = "1" },
                                new SelectListItem{ Text="Checking", Value = "2" },
                                new SelectListItem{ Text="Approving", Value = "3" },
                             }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    General Manager
                </label>
                @*@Html.LabelFor(model => model.GeneralManagerId, "GeneralManagerId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-6">
                    @Html.DropDownList("GeneralManagerId", (IEnumerable<SelectListItem>)ViewBag.GeneralManager, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GeneralManagerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <input type="submit" value="Save" class="btn btn-green" />
                    <a href='@Url.Action("Index")' class="btn btn-light-orange">Back to List</a>
                </div>
            </div>
        </div>
    </div>
}
